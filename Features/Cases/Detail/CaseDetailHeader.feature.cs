// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Epiq.ETS.TCMS.Anywhere.Testing.E2ETest.Features.Cases.Detail
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Case Detail - Header")]
    [NUnit.Framework.IgnoreAttribute("Ignored feature")]
    [NUnit.Framework.CategoryAttribute("Regression")]
    [NUnit.Framework.CategoryAttribute("DoNotExecute")]
    public partial class CaseDetail_HeaderFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CaseDetailHeader.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Case Detail - Header", "\tIn order to reference important case information.\r\n\tAs a user of Unity \r\n\tI want" +
                    " to be able to see the data of a Case on the Case Detail page", ProgrammingLanguage.CSharp, new string[] {
                        "Regression",
                        "Ignore",
                        "DoNotExecute"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("001 - Case Detail - Header - Case Information is Correct")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("Sanity")]
        [NUnit.Framework.CategoryAttribute("US44750")]
        [NUnit.Framework.CategoryAttribute("TC61594")]
        [NUnit.Framework.CategoryAttribute("TC61605")]
        [NUnit.Framework.CategoryAttribute("TC61606")]
        [NUnit.Framework.CategoryAttribute("TC61608")]
        [NUnit.Framework.CategoryAttribute("TC61610")]
        [NUnit.Framework.CategoryAttribute("TC61613")]
        [NUnit.Framework.CategoryAttribute("CaseStatus")]
        [NUnit.Framework.CategoryAttribute("US41190")]
        [NUnit.Framework.CategoryAttribute("TC61629")]
        [NUnit.Framework.CategoryAttribute("TC61628")]
        [NUnit.Framework.CategoryAttribute("CaseBalanceIcon")]
        [NUnit.Framework.CategoryAttribute("US36805")]
        [NUnit.Framework.CategoryAttribute("TC72364")]
        [NUnit.Framework.CategoryAttribute("CaseClaimsIcon")]
        [NUnit.Framework.CategoryAttribute("US36803")]
        [NUnit.Framework.CategoryAttribute("TC72741")]
        [NUnit.Framework.CategoryAttribute("CaseDistributionsIcon")]
        [NUnit.Framework.CategoryAttribute("US36804")]
        [NUnit.Framework.CategoryAttribute("TC72734")]
        [NUnit.Framework.TestCaseAttribute("09-13569", "Open", "49-0962900", "$80.3K", "32", "-$100", new string[0])]
        [NUnit.Framework.TestCaseAttribute("0:V327646-XXX", "Open", "87-0341794", "$0", "258", "$0", new string[0])]
        public virtual void _001_CaseDetail_Header_CaseInformationIsCorrect(string caseNumber, string status, string taxId, string distributions, string claims, string bankBalance, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CaseDetail",
                    "Sanity",
                    "US44750",
                    "TC61594",
                    "TC61605",
                    "TC61606",
                    "TC61608",
                    "TC61610",
                    "TC61613",
                    "CaseStatus",
                    "US41190",
                    "TC61629",
                    "TC61628",
                    "CaseBalanceIcon",
                    "US36805",
                    "TC72364",
                    "CaseClaimsIcon",
                    "US36803",
                    "TC72741",
                    "CaseDistributionsIcon",
                    "US36804",
                    "TC72734"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("001 - Case Detail - Header - Case Information is Correct", @__tags);
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
 testRunner.Given("I enter to Case List page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
 testRunner.And(string.Format("I Navigate to Case Detail page for the \'{0}\' Case with Case Number \'{1}\'", status, caseNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.Then("I See Case Detail Page Displays the Correct Case Data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 21
 testRunner.And("Claims Icon Displays with Description \'Claims\' and Correct Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.And(string.Format("Distributions to Date Icon Displays with Description \'Dist. to Date\' and Value \'{" +
                        "0}\'", distributions), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And(string.Format("Bank Balance Icon Displays with Description \'Balance\' and Value \'{0}\'", bankBalance), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("002 - Case Detail - Header - Header Is Sticky On Top Of Page")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("Sanity")]
        [NUnit.Framework.CategoryAttribute("US81550")]
        [NUnit.Framework.CategoryAttribute("TC113908")]
        [NUnit.Framework.TestCaseAttribute("10-14418", new string[0])]
        [NUnit.Framework.TestCaseAttribute("09-13569", new string[0])]
        [NUnit.Framework.TestCaseAttribute("11-14933", new string[0])]
        public virtual void _002_CaseDetail_Header_HeaderIsStickyOnTopOfPage(string caseNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CaseDetail",
                    "Sanity",
                    "US81550",
                    "TC113908"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("002 - Case Detail - Header - Header Is Sticky On Top Of Page", @__tags);
#line 38
this.ScenarioSetup(scenarioInfo);
#line 39
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 40
 testRunner.And(string.Format("I Enter to Case Detail page for Case with Case Number \'{0}\'", caseNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.When("I Scroll All The Way Down On The Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
 testRunner.Then("I See Header Bar Sticks Visible On Top", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("003 - Case Detail - Browser Refresh Stays on Same Tab")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("Sanity")]
        [NUnit.Framework.CategoryAttribute("US113309")]
        [NUnit.Framework.CategoryAttribute("TC113626")]
        [NUnit.Framework.TestCaseAttribute("Assets", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Banking", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Claims", new string[0])]
        public virtual void _003_CaseDetail_BrowserRefreshStaysOnSameTab(string tab, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CaseDetail",
                    "Sanity",
                    "US113309",
                    "TC113626"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("003 - Case Detail - Browser Refresh Stays on Same Tab", @__tags);
#line 52
this.ScenarioSetup(scenarioInfo);
#line 53
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'10-14418\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.And(string.Format("Go To \'{0}\' Tab", tab), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.When("I Refresh The Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
 testRunner.Then(string.Format("I Still See \'{0}\' Tab", tab), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
