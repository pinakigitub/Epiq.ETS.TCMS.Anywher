// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Epiq.ETS.TCMS.Anywhere.Testing.E2ETest.Features.Cases.Detail.Claims
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Case Detail - Claims List\tCAF")]
    [NUnit.Framework.CategoryAttribute("Regression")]
    [NUnit.Framework.CategoryAttribute("Regression")]
    [NUnit.Framework.CategoryAttribute("DoNotExecute")]

    public partial class CaseDetail_ClaimsListCAFFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CaseClaimsList.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Case Detail - Claims List\tCAF", "\tIn order to manage my claims for the case\r\n\tAs a user of Unity\r\n\tI need the clai" +
                    "ms linked to my case to appear on the Case Claims Screen", ProgrammingLanguage.CSharp, new string[] {
                        "Regression"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Case Detail - Claims List CAF Display (Desktop)")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("ClaimsList")]
        [NUnit.Framework.CategoryAttribute("Sanity")]
        [NUnit.Framework.CategoryAttribute("US52695")]
        [NUnit.Framework.CategoryAttribute("TC72850")]
        [NUnit.Framework.CategoryAttribute("TC72746")]
        [NUnit.Framework.TestCaseAttribute("09-13569", new string[0])]
        [NUnit.Framework.TestCaseAttribute("03-30382", new string[0])]
        public virtual void CaseDetail_ClaimsListCAFDisplayDesktop(string caseNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CaseDetail",
                    "ClaimsList",
                    "Sanity",
                    "US52695",
                    "TC72850",
                    "TC72746"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Case Detail - Claims List CAF Display (Desktop)", @__tags);
#line 10
this.ScenarioSetup(scenarioInfo);
#line 11
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.When(string.Format("I Enter to Case Detail page for Case with Case Number \'{0}\'", caseNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
 testRunner.And("I Go to Claims Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.Then("I See Claims Icon Count Matches the Total of Claims on the List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Case Detail - Claims List CAF - \"No Results Available\" Message")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("ClaimsList")]
        [NUnit.Framework.CategoryAttribute("Regression")]
        [NUnit.Framework.CategoryAttribute("US52695")]
        [NUnit.Framework.CategoryAttribute("TC73677")]
        public virtual void CaseDetail_ClaimsListCAF_NoResultsAvailableMessage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Case Detail - Claims List CAF - \"No Results Available\" Message", new string[] {
                        "CaseDetail",
                        "ClaimsList",
                        "Regression",
                        "US52695",
                        "TC73677"});
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 25
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'17-15569\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.When("I Go to Claims Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
 testRunner.Then("I See No Claims Display on the List And a Message Shows Reading \'No Results Avail" +
                    "able\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Case Detail - Claims List CAF - Claims Stat And Order")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("ClaimsList")]
        [NUnit.Framework.CategoryAttribute("NeedsDBClaimUpdates")]
        [NUnit.Framework.CategoryAttribute("Sanity")]
        [NUnit.Framework.CategoryAttribute("US52695")]
        [NUnit.Framework.CategoryAttribute("TC73676")]
        [NUnit.Framework.CategoryAttribute("US74453")]
        [NUnit.Framework.CategoryAttribute("TC97452")]
        [NUnit.Framework.CategoryAttribute("US72578")]
        [NUnit.Framework.CategoryAttribute("TC73722")]
        [NUnit.Framework.CategoryAttribute("TC73724")]
        [NUnit.Framework.CategoryAttribute("TC73725")]
        [NUnit.Framework.CategoryAttribute("US72891")]
        [NUnit.Framework.CategoryAttribute("TC97676")]
        [NUnit.Framework.CategoryAttribute("US72898")]
        [NUnit.Framework.CategoryAttribute("TC72741")]
        [NUnit.Framework.CategoryAttribute("TC75999")]
        [NUnit.Framework.CategoryAttribute("US113306")]
        [NUnit.Framework.CategoryAttribute("TC113507")]
        public virtual void CaseDetail_ClaimsListCAF_ClaimsStatAndOrder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Case Detail - Claims List CAF - Claims Stat And Order", new string[] {
                        "CaseDetail",
                        "ClaimsList",
                        "NeedsDBClaimUpdates",
                        "Sanity",
                        "US52695",
                        "TC73676",
                        "US74453",
                        "TC97452",
                        "US72578",
                        "TC73722",
                        "TC73724",
                        "TC73725",
                        "US72891",
                        "TC97676",
                        "US72898",
                        "TC72741",
                        "TC75999",
                        "US113306",
                        "TC113507"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 40
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
 testRunner.When("I Enter to Case Detail page for Case with Case Number \'09-13569\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
 testRunner.And("I Go to Claims Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.Then("I See Claims Display on the List With Valid Data In Order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
