// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Epiq.ETS.TCMS.Anywhere.Testing.E2ETest.Features.Cases.Detail.Claims
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Case Detail - Claim - Claims Edit")]
    [NUnit.Framework.IgnoreAttribute("Ignored feature")]
    [NUnit.Framework.CategoryAttribute("Regression")]
    [NUnit.Framework.CategoryAttribute("DoNotExecute")]
    public partial class CaseDetail_Claim_ClaimsEditFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CaseClaimsEdit.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Case Detail - Claim - Claims Edit", "\tIn order to manage Claims for a Case\r\n\tAs a user of Unity with Claim Permissions" +
                    "\r\n\tI need to be able to edit existing Claims", ProgrammingLanguage.CSharp, new string[] {
                        "Regression",
                        "Ignore",
                        "DoNotExecute"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("001 - Case Detail - Claims - Edit Claim Basic Form")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("EditClaim")]
        [NUnit.Framework.CategoryAttribute("US?")]
        [NUnit.Framework.CategoryAttribute("TC?")]
        public virtual void _001_CaseDetail_Claims_EditClaimBasicForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("001 - Case Detail - Claims - Edit Claim Basic Form", new string[] {
                        "CaseDetail",
                        "EditClaim",
                        "US?",
                        "TC?"});
#line 11
this.ScenarioSetup(scenarioInfo);
#line 12
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'10-14868\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("I Go to Claims Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.And("I Click On Edit For Claim With Claim Number \'123AutoEdit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number",
                        "Name",
                        "Status",
                        "Category",
                        "Code",
                        "Sub Code",
                        "Pay Sequence",
                        "Scheduled",
                        "Claimed",
                        "Allowed",
                        "Reserved"});
            table1.AddRow(new string[] {
                        "321AutoEdit",
                        "Automated DO NOT DELETE Test Edited Claim Basic Form",
                        "Objection Pending",
                        "Administrative Expense",
                        "2100",
                        "",
                        "100",
                        "$ 10.00",
                        "$ 50.00",
                        "$ 150.00",
                        "$ 0.00"});
#line 16
 testRunner.And("I Enter These Values On Basic Claim Form", ((string)(null)), table1, "And ");
#line 19
 testRunner.When("I Click On Save Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.Then("I Verify On DB That Verified Field Is True For This Claim", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 21
 testRunner.And("I Click On Edit For Claim With Claim Number \'321AutoEdit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.And("I See Edited Values Appear On Edit Claim Basic Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And("I See Calculated Values Update to \'Administrative\' \'$0.00\' \'$0.00\' And \'$150.00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And("I Click On Cancel Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("BUG_174792- 002 - Case Detail - Claims - Edit Claim (More Options)")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("EditClaim")]
        [NUnit.Framework.CategoryAttribute("Bug174792")]
        public virtual void BUG_174792_002_CaseDetail_Claims_EditClaimMoreOptions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("BUG_174792- 002 - Case Detail - Claims - Edit Claim (More Options)", new string[] {
                        "CaseDetail",
                        "EditClaim",
                        "Bug174792"});
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
 testRunner.Given("I enter to Dashboard page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 31
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'10-14868\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And("I Go to Claims Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.And("I Click On Edit For Claim With Claim Number \'123AutoEdit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And("I Click On More Options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Check Description",
                        "Creditor Acc Number",
                        "Wage Deduction",
                        "Non-Compensable",
                        "Exclude from UFR",
                        "Non-discharged",
                        "Reaffirmed",
                        "Date Filed",
                        "Amends",
                        "Amends Version",
                        "Amended By",
                        "Amended By Version"});
            table2.AddRow(new string[] {
                        "Check Description Edited",
                        "Creditor Acc Number Edited",
                        "false",
                        "true",
                        "false",
                        "true",
                        "false",
                        "09/26/2016",
                        "ABC",
                        "123",
                        "DEF",
                        "456"});
#line 35
 testRunner.And("I Enter These Values On More Options Claim Form", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Register Note",
                        "Internal Note"});
            table3.AddRow(new string[] {
                        "Edited Claim Register Note",
                        "Edited Claim Internal Note"});
#line 38
 testRunner.And("I Enter These Values For Claim Notes", ((string)(null)), table3, "And ");
#line 41
 testRunner.When("I Click On Save Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
 testRunner.And("I Click On Edit For Claim With Claim Number \'123AutoEdit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("I Click On More Options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.Then("I See Edited Values Appear On Edit Claim Form Under More Options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
 testRunner.And("I Click On Cancel Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("003 - Case Detail -  Claims - Edit Claim - Value Money Fields Format")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("DoNotExecute")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("EditCLaim")]
        [NUnit.Framework.CategoryAttribute("ValueFieldsFormat")]
        [NUnit.Framework.CategoryAttribute("Sanity")]
        [NUnit.Framework.CategoryAttribute("US112035")]
        [NUnit.Framework.CategoryAttribute("TC?")]
        [NUnit.Framework.TestCaseAttribute("Scheduled Amount", "507223", "$ 507,223.00", "$ 7,223.00", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Scheduled Amount", "5072.23", "$ 5,072.23", "$ 072.23", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Scheduled Amount", "50.00", "$ 50.00", "$ 0.00", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Scheduled Amount", "120", "$ 120.00", "$ 0.00", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Claimed Amount", "507223", "$ 507,223.00", "$ 7,223.00", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Claimed Amount", "5072.23", "$ 5,072.23", "$ 072.23", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Claimed Amount", "50.00", "$ 50.00", "$ 0.00", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Claimed Amount", "120", "$ 120.00", "$ 0.00", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Allowed Amount", "507223", "$ 507,223.00", "$ 7,223.00", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Allowed Amount", "5072.23", "$ 5,072.23", "$ 072.23", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Allowed Amount", "50.00", "$ 50.00", "$ 0.00", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Allowed Amount", "120", "$ 120.00", "$ 0.00", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Reserved Amount", "507223", "$ 507,223.00", "$ 7,223.00", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Reserved Amount", "5072.23", "$ 5,072.23", "$ 072.23", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Reserved Amount", "50.00", "$ 50.00", "$ 0.00", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Reserved Amount", "120", "$ 120.00", "$ 0.00", new string[0])]
        public virtual void _003_CaseDetail_Claims_EditClaim_ValueMoneyFieldsFormat(string field, string setValue, string expectedValue, string expectedOnDelete, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Ignore",
                    "DoNotExecute",
                    "CaseDetail",
                    "EditCLaim",
                    "ValueFieldsFormat",
                    "Sanity",
                    "US112035",
                    "TC?"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("003 - Case Detail -  Claims - Edit Claim - Value Money Fields Format", @__tags);
#line 53
this.ScenarioSetup(scenarioInfo);
#line 54
 testRunner.Given("I enter to Dashboard page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 55
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'10-14868\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.And("I Go to Claims Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.And("I Click On Edit For Claim With Claim Number \'123AutoEdit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.And(string.Format("I See Claim \'{0}\' Field Placeholder is \'\'", field), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.When(string.Format("I Click On Claim Field \'{0}\'", field), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
 testRunner.Then(string.Format("I See Claim Cursor Position Is \'{0}\' Field", field), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 61
 testRunner.And(string.Format("I Enter Claim \'{0}\' Field Value \'{1}\'", field, setValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.And(string.Format("I See Claim \'{0}\' Field Value is \'{1}\'", field, expectedValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.And(string.Format("I Can Select Two Digits From Claim \'{0}\' Value \'{1}\' And Delete With DELETE Key G" +
                        "etting \'{2}\'", field, setValue, expectedOnDelete), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.And(string.Format("I Can Select Two Digits From Claim \'{0}\' Value \'{1}\' And Delete With BACKSPACE Ke" +
                        "y Getting \'{2}\'", field, setValue, expectedOnDelete), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.And(string.Format("I Can Select All Digits From Claim \'{0}\' Value \'{1}\' And Delete With DELETE Key", field, setValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
 testRunner.And(string.Format("I Can Select All Digits From Claim \'{0}\' Value \'{1}\' And Delete With BACKSPACE Ke" +
                        "y", field, setValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.And("I Click On Cancel Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("004 - Case Detail - Claims - Asset Description dropdown new behavior")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("EditClaim")]
        [NUnit.Framework.CategoryAttribute("US?")]
        [NUnit.Framework.CategoryAttribute("TC?")]
        [NUnit.Framework.CategoryAttribute("US118916")]
        [NUnit.Framework.TestCaseAttribute("Beginning", new string[0])]
        [NUnit.Framework.TestCaseAttribute("End", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Middle", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Highlighted", new string[0])]
        public virtual void _004_CaseDetail_Claims_AssetDescriptionDropdownNewBehavior(string position, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CaseDetail",
                    "EditClaim",
                    "US?",
                    "TC?",
                    "US118916"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("004 - Case Detail - Claims - Asset Description dropdown new behavior", @__tags);
#line 90
this.ScenarioSetup(scenarioInfo);
#line 91
 testRunner.Given("I enter to Dashboard page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 92
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'10-14868\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.And("I Go to Claims Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.When("I Click On Edit For Claim With Claim Number \'123AutoEdit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 96
 testRunner.Then(string.Format("Select value with text \'Changing Description\' typing at position \'{0}\' on field \'" +
                        "Description\' using \'Click\' for Transaction", position), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 97
 testRunner.And("I Click On Cancel Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("005 - Case Detail - Claims Code - Dropdown new behavior")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("EditClaim")]
        [NUnit.Framework.CategoryAttribute("US?")]
        [NUnit.Framework.CategoryAttribute("TC?")]
        [NUnit.Framework.CategoryAttribute("US118916")]
        [NUnit.Framework.TestCaseAttribute("Beginning", "2420", new string[0])]
        [NUnit.Framework.TestCaseAttribute("End", "2420", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Highlighted", "2420", new string[0])]
        public virtual void _005_CaseDetail_ClaimsCode_DropdownNewBehavior(string position, string text, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CaseDetail",
                    "EditClaim",
                    "US?",
                    "TC?",
                    "US118916"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("005 - Case Detail - Claims Code - Dropdown new behavior", @__tags);
#line 108
this.ScenarioSetup(scenarioInfo);
#line 109
 testRunner.Given("I enter to Dashboard page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 110
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'10-14868\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
 testRunner.And("I Go to Claims Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
 testRunner.When("I Click On Edit For Claim With Claim Number \'123AutoEdit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 114
 testRunner.Then(string.Format("Select value with text \'{0}\' typing at position \'{1}\' on field \'Code\' using \'Clic" +
                        "k\' for Transaction", text, position), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 115
 testRunner.And("I Click On Cancel Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("006 - Case Detail - Claims Sub Code- Dropdown new behavior")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("EditClaim")]
        [NUnit.Framework.CategoryAttribute("US?")]
        [NUnit.Framework.CategoryAttribute("TC?")]
        [NUnit.Framework.CategoryAttribute("US118916")]
        [NUnit.Framework.TestCaseAttribute("Beginning", "75", new string[0])]
        [NUnit.Framework.TestCaseAttribute("End", "75", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Highlighted", "75", new string[0])]
        public virtual void _006_CaseDetail_ClaimsSubCode_DropdownNewBehavior(string position, string text, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CaseDetail",
                    "EditClaim",
                    "US?",
                    "TC?",
                    "US118916"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("006 - Case Detail - Claims Sub Code- Dropdown new behavior", @__tags);
#line 125
this.ScenarioSetup(scenarioInfo);
#line 126
 testRunner.Given("I enter to Dashboard page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 127
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'10-14868\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.And("I Go to Claims Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
 testRunner.When("I Click On Edit For Claim With Claim Number \'123AutoEdit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 131
 testRunner.And("Select value with text \'2420\' typing at position \'End\' on field \'Code\' using \'Cli" +
                    "ck\' for Transaction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
 testRunner.Then(string.Format("Select value with text \'{0}\' typing at position \'{1}\' on field \'Sub Code\' using \'" +
                        "Click\' for Transaction", text, position), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 133
 testRunner.And("I Click On Cancel Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
