// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Epiq.ETS.TCMS.Anywhere.Testing.E2ETest.Features.Cases.Detail.Banking.List
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Case Detail - Banking - Transactions List Basics")]
    [NUnit.Framework.IgnoreAttribute("Ignored feature")]
    [NUnit.Framework.CategoryAttribute("Regression")]
    [NUnit.Framework.CategoryAttribute("DoNotExecute")]
    [NUnit.Framework.CategoryAttribute("BankingTransactions")]
    public partial class CaseDetail_Banking_TransactionsListBasicsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CaseBankingTransactionsListBasics.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Case Detail - Banking - Transactions List Basics", "\tIn order to review my data, make any edits, or create new banking transactions\r\n" +
                    "\tAs a user of Unity\r\n\tI need to be able to see correctly a list of my case trans" +
                    "actions for each bank account", ProgrammingLanguage.CSharp, new string[] {
                        "Regression",
                        "Ignore",
                        "DoNotExecute",
                        "BankingTransactions"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Case Detail - Banking - Transactions List - \"No Results Available\" Message")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("BankingTransactions")]
        [NUnit.Framework.CategoryAttribute("US52695")]
        [NUnit.Framework.CategoryAttribute("TC73677")]
        public virtual void CaseDetail_Banking_TransactionsList_NoResultsAvailableMessage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Case Detail - Banking - Transactions List - \"No Results Available\" Message", new string[] {
                        "CaseDetail",
                        "BankingTransactions",
                        "US52695",
                        "TC73677"});
#line 12
this.ScenarioSetup(scenarioInfo);
#line 13
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'0:000-XXX\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.When("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.Then("I See No Transactions Display on the List And a Message Shows Reading \'No Results" +
                    " Available\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Case Detail -  Banking - New Transactions Disabled on Closed Bank Accounts")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("BankingTransactions")]
        [NUnit.Framework.CategoryAttribute("Sanity")]
        [NUnit.Framework.CategoryAttribute("US98645")]
        [NUnit.Framework.CategoryAttribute("TC101136")]
        public virtual void CaseDetail_Banking_NewTransactionsDisabledOnClosedBankAccounts()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Case Detail -  Banking - New Transactions Disabled on Closed Bank Accounts", new string[] {
                        "CaseDetail",
                        "BankingTransactions",
                        "Sanity",
                        "US98645",
                        "TC101136"});
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'11-29627\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.When("I Select Bank Account By Number \'9999999965\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
 testRunner.Then("I See New Transaction Buttons Are Disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Case Detail -  Banking - Transactions List - Stat And Order")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("BankingTransactions")]
        [NUnit.Framework.CategoryAttribute("Sanity")]
        [NUnit.Framework.CategoryAttribute("US41215")]
        [NUnit.Framework.CategoryAttribute("TC78059")]
        [NUnit.Framework.CategoryAttribute("US74950")]
        [NUnit.Framework.CategoryAttribute("TC85403")]
        [NUnit.Framework.CategoryAttribute("US86095")]
        [NUnit.Framework.CategoryAttribute("US114662")]
        [NUnit.Framework.TestCaseAttribute("11-29627", new string[0])]
        [NUnit.Framework.TestCaseAttribute("09-13569", new string[0])]
        public virtual void CaseDetail_Banking_TransactionsList_StatAndOrder(string caseNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CaseDetail",
                    "BankingTransactions",
                    "Sanity",
                    "US41215",
                    "TC78059",
                    "US74950",
                    "TC85403",
                    "US86095",
                    "US114662"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Case Detail -  Banking - Transactions List - Stat And Order", @__tags);
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
 testRunner.And(string.Format("I Enter to Case Detail page for Case with Case Number \'{0}\'", caseNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.When("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
 testRunner.Then("I See Transactions Display on the List With Valid Data In Order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
