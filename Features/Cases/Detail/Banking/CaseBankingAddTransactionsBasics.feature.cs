// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Epiq.ETS.TCMS.Anywhere.Testing.E2ETest.Features.Cases.Detail.Banking
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Case Detail - Banking - Add All Transactions Basics")]
    [NUnit.Framework.CategoryAttribute("Regression")]
    [NUnit.Framework.CategoryAttribute("BankingTransactions")]
    [NUnit.Framework.CategoryAttribute("Regression")]
    [NUnit.Framework.CategoryAttribute("DoNotExecute")]
    [NUnit.Framework.CategoryAttribute("AddTransactionsBasics")]
    [NUnit.Framework.CategoryAttribute("US100915")]
    [NUnit.Framework.CategoryAttribute("US100916")]
    [NUnit.Framework.CategoryAttribute("US100909")]
    [NUnit.Framework.CategoryAttribute("US100910")]
    [NUnit.Framework.CategoryAttribute("US100911")]
    public partial class CaseDetail_Banking_AddAllTransactionsBasicsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CaseBankingAddTransactionsBasics.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Case Detail - Banking - Add All Transactions Basics", "\tIn order to create new banking transactions\r\n\tAs a user of Unity\r\n\tI need to be " +
                    "able to add Transactions for each bank account", ProgrammingLanguage.CSharp, new string[] {
                        "Regression",
                        "BankingTransactions",
                        "AddTransactionsBasics",
                        "US100915",
                        "US100916",
                        "US100909",
                        "US100910",
                        "US100911"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("001 - Case Detail -  Banking - Add Transaction - Labels and Placeholders")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("BankingTransactions")]
        [NUnit.Framework.CategoryAttribute("AddReceiptTransactions")]
        [NUnit.Framework.CategoryAttribute("Sanity")]
        [NUnit.Framework.CategoryAttribute("US97337")]
        [NUnit.Framework.CategoryAttribute("TC97668")]
        [NUnit.Framework.CategoryAttribute("US111938")]
        [NUnit.Framework.CategoryAttribute("TC118470")]
        [NUnit.Framework.CategoryAttribute("TC118471")]
        [NUnit.Framework.CategoryAttribute("TC118472")]
        [NUnit.Framework.CategoryAttribute("US112468")]
        [NUnit.Framework.CategoryAttribute("TC119569")]
        [NUnit.Framework.TestCaseAttribute("Check", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Deposit", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Deposit Correcting Check", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Deposit Correcting Debit", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Bank Service Charge Refund (Neg)", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Bank Service Charge", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Transfer Out", new string[0])]
        public virtual void _001_CaseDetail_Banking_AddTransaction_LabelsAndPlaceholders(string transaction, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CaseDetail",
                    "BankingTransactions",
                    "AddReceiptTransactions",
                    "Sanity",
                    "US97337",
                    "TC97668",
                    "US111938",
                    "TC118470",
                    "TC118471",
                    "TC118472",
                    "US112468",
                    "TC119569"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("001 - Case Detail -  Banking - Add Transaction - Labels and Placeholders", @__tags);
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'09-13569\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.When(string.Format("I Go To Create Transaction \'{0}\'", transaction), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
 testRunner.Then("I See All Fields Contain Correct Labels And Placeholders", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 33
 testRunner.And("I See SUM OF ALLOCATION Field Is Not Present Except For Deposits", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And("Entering A Negative Value On Amount Field Is Not Posible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("003 - Case Detail -  Banking - Cancel Transaction Creation")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("BankingTransactions")]
        [NUnit.Framework.CategoryAttribute("AddChecksC:\\Users\\abaquero\\Source\\Repos\\ETS-TCMS.E2E\\Epiq.ETS.TCMS.Anywhere.Testi" +
            "ng.E2ETest\\Test")]
        [NUnit.Framework.CategoryAttribute("Framework\\Steps\\Login\\")]
        [NUnit.Framework.CategoryAttribute("TransactionSaving")]
        [NUnit.Framework.CategoryAttribute("ChecksSaving")]
        [NUnit.Framework.CategoryAttribute("Sanity")]
        [NUnit.Framework.CategoryAttribute("US36860")]
        [NUnit.Framework.CategoryAttribute("TC85421")]
        [NUnit.Framework.CategoryAttribute("Bug157286Fixed")]
        [NUnit.Framework.CategoryAttribute("Bug157287Fixed")]
        [NUnit.Framework.CategoryAttribute("Bug157525Fixed")]
        [NUnit.Framework.CategoryAttribute("Bug157526Fixed")]
        [NUnit.Framework.CategoryAttribute("DoNotExecute")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("BankingTransactions")]
        [NUnit.Framework.CategoryAttribute("AddChecks")]
        [NUnit.Framework.CategoryAttribute("TransactionSaving")]
        [NUnit.Framework.CategoryAttribute("Sanity")]
        [NUnit.Framework.CategoryAttribute("US36859")]
        [NUnit.Framework.CategoryAttribute("TC85410")]
        [NUnit.Framework.TestCaseAttribute("Check", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Deposit", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Deposit Correcting Check", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Deposit Correcting Debit", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Bank Service Charge Refund (Neg)", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Bank Service Charge", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Transfer Out", new string[0])]
        public virtual void _003_CaseDetail_Banking_CancelTransactionCreation(string transaction, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CaseDetail",
                    "BankingTransactions",
                    "AddChecksC:\\Users\\abaquero\\Source\\Repos\\ETS-TCMS.E2E\\Epiq.ETS.TCMS.Anywhere.Testi" +
                        "ng.E2ETest\\Test",
                    "Framework\\Steps\\Login\\",
                    "TransactionSaving",
                    "ChecksSaving",
                    "Sanity",
                    "US36860",
                    "TC85421",
                    "Bug157286Fixed",
                    "Bug157287Fixed",
                    "Bug157525Fixed",
                    "Bug157526Fixed",
                    "Ignore",
                    "DoNotExecute",
                    "CaseDetail",
                    "BankingTransactions",
                    "AddChecks",
                    "TransactionSaving",
                    "Sanity",
                    "US36859",
                    "TC85410"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("003 - Case Detail -  Banking - Cancel Transaction Creation", @__tags);
#line 94
this.ScenarioSetup(scenarioInfo);
#line 95
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 96
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'10-14868\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
 testRunner.And(string.Format("I Go To Create Transaction \'{0}\'", transaction), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
 testRunner.When("I Enter Valid Data for a New Transaction And Click on the Cancel Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 100
 testRunner.Then("I Do NOT See The Transaction on the Transactions List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
