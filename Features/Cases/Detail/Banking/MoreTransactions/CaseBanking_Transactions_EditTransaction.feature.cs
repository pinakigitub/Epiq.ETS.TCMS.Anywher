// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Epiq.ETS.TCMS.Anywhere.Testing.E2ETest.Features.Cases.Detail.Banking.MoreTransactions
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CaseBanking_Transactions_EditTransactions")]
    [NUnit.Framework.IgnoreAttribute("Ignored feature")]
    [NUnit.Framework.CategoryAttribute("Regression")]
    [NUnit.Framework.CategoryAttribute("DoNotExecute")]
    [NUnit.Framework.CategoryAttribute("BankingTransactions")]
    [NUnit.Framework.CategoryAttribute("EditTransactions")]
    public partial class CaseBanking_Transactions_EditTransactionsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CaseBanking_Transactions_EditTransaction.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CaseBanking_Transactions_EditTransactions", null, ProgrammingLanguage.CSharp, new string[] {
                        "Regression",
                        "Ignore",
                        "DoNotExecute",
                        "BankingTransactions",
                        "EditTransactions"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("003A_\"EditTransaction_Codes\" Verify Code selection by different ways")]
        [NUnit.Framework.CategoryAttribute("AssetsPage")]
        [NUnit.Framework.CategoryAttribute("deleteAllTransactionsForCase1960")]
        [NUnit.Framework.CategoryAttribute("AssetsPage")]
        [NUnit.Framework.CategoryAttribute("deleteAllTransactionsForCase1960")]
        [NUnit.Framework.CategoryAttribute("deleteAllTransactionsForCase1960")]
        [NUnit.Framework.CategoryAttribute("AssetsPage")]
        [NUnit.Framework.CategoryAttribute("118916")]
        [NUnit.Framework.TestCaseAttribute("Click", "Deposit Correcting Check", "Yes", "1290", "Franco Deposit Correcting Check 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Enter", "Deposit Correcting Check", "Yes", "1290", "Franco Deposit Correcting Check 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Tab", "Deposit Correcting Check", "Yes", "1290", "Franco Deposit Correcting Check 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Click", "Bank Service Charge", "Yes", "2420", "Franco Bank Service Charge 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Enter", "Bank Service Charge", "Yes", "2420", "Franco Bank Service Charge 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Tab", "Bank Service Charge", "Yes", "2420", "Franco Bank Service Charge 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Click", "Bank Service Charge Refund (Neg)", "Yes", "2420", "Franco Bank Service Charge Refund (Neg) 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Enter", "Bank Service Charge Refund (Neg)", "Yes", "2420", "Franco Bank Service Charge Refund (Neg) 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Tab", "Bank Service Charge Refund (Neg)", "Yes", "2420", "Franco Bank Service Charge Refund (Neg) 01", new string[0])]
        public virtual void _003A_EditTransaction_CodesVerifyCodeSelectionByDifferentWays(string selectMethod, string transactionType, string moreTrx, string codeToSelect, string trxName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "AssetsPage",
                    "deleteAllTransactionsForCase1960",
                    "AssetsPage",
                    "deleteAllTransactionsForCase1960",
                    "deleteAllTransactionsForCase1960",
                    "AssetsPage",
                    "118916"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("003A_\"EditTransaction_Codes\" Verify Code selection by different ways", @__tags);
#line 88
this.ScenarioSetup(scenarioInfo);
#line 89
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 90
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'JAMES CAMERON\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.And(string.Format("Click on More transactions button \'{0}\'", moreTrx), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.And(string.Format("Click to open Transaction with name \'{0}\'", transactionType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.And(string.Format("Enter Transaction Name value \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.And("Enter Transaction Amount value \'500\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.And(string.Format("Select Code by text \'{0}\' using \'Click\' for Transaction", codeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
 testRunner.And("Click on Save New Transaction button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
 testRunner.When(string.Format("Click Edit button for Transaction with Name \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 99
 testRunner.Then(string.Format("Select Code by text \'{0}\' using \'{1}\' for Transaction", codeToSelect, selectMethod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("003B_\"EditTransaction_SubCodes\" Verify Sub Code selection by different ways")]
        [NUnit.Framework.CategoryAttribute("deleteAllTransactionsForCase1960")]
        [NUnit.Framework.CategoryAttribute("AssetsPage")]
        [NUnit.Framework.CategoryAttribute("118916")]
        [NUnit.Framework.TestCaseAttribute("Click", "Deposit Correcting Check", "Yes", "1290", "Franco Deposit Correcting Check 01", "01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Enter", "Deposit Correcting Check", "Yes", "1290", "Franco Deposit Correcting Check 01", "01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Tab", "Deposit Correcting Check", "Yes", "1290", "Franco Deposit Correcting Check 01", "01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Click", "Bank Service Charge", "Yes", "2420", "Franco Bank Service Charge 01", "75", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Enter", "Bank Service Charge", "Yes", "2420", "Franco Bank Service Charge 01", "75", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Tab", "Bank Service Charge", "Yes", "2420", "Franco Bank Service Charge 01", "75", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Click", "Bank Service Charge Refund (Neg)", "Yes", "2420", "Franco Bank Service Charge Refund (Neg) 01", "75", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Enter", "Bank Service Charge Refund (Neg)", "Yes", "2420", "Franco Bank Service Charge Refund (Neg) 01", "75", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Tab", "Bank Service Charge Refund (Neg)", "Yes", "2420", "Franco Bank Service Charge Refund (Neg) 01", "75", new string[0])]
        public virtual void _003B_EditTransaction_SubCodesVerifySubCodeSelectionByDifferentWays(string selectMethod, string transactionType, string moreTrx, string codeToSelect, string trxName, string subCodeToSelect, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "deleteAllTransactionsForCase1960",
                    "AssetsPage",
                    "118916"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("003B_\"EditTransaction_SubCodes\" Verify Sub Code selection by different ways", @__tags);
#line 123
this.ScenarioSetup(scenarioInfo);
#line 124
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 125
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'JAMES CAMERON\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
 testRunner.And(string.Format("Click on More transactions button \'{0}\'", moreTrx), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.And(string.Format("Click to open Transaction with name \'{0}\'", transactionType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.And(string.Format("Enter Transaction Name value \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
 testRunner.And("Enter Transaction Amount value \'500\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
 testRunner.And(string.Format("Select Code by text \'{0}\' using \'Click\' for Transaction", codeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
 testRunner.And(string.Format("Select Sub Code by text \'{0}\' using \'Click\' for Transaction", subCodeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
 testRunner.And("Click on Save New Transaction button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
 testRunner.When(string.Format("Click Edit button for Transaction with Name \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 135
 testRunner.Then(string.Format("Select Sub Code by text \'{0}\' using \'{1}\' for Transaction", subCodeToSelect, selectMethod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("004_\"EditTransaction_SubCodes\" Code and Sub Code Behaviors")]
        [NUnit.Framework.CategoryAttribute("AssetsPage")]
        [NUnit.Framework.CategoryAttribute("deleteAllTransactionsForCase1960")]
        [NUnit.Framework.CategoryAttribute("US127778")]
        [NUnit.Framework.TestCaseAttribute("Deposit Correcting Check", "Yes", "1290", "Franco Deposit Correcting Check 01", "01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Bank Service Charge", "Yes", "2420", "Franco Bank Service Charge 01", "75", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Bank Service Charge Refund (Neg)", "Yes", "2420", "Franco Bank Service Charge Refund (Neg) 01", "75", new string[0])]
        public virtual void _004_EditTransaction_SubCodesCodeAndSubCodeBehaviors(string transactionType, string moreTrx, string codeToSelect, string trxName, string subCodeToSelect, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "AssetsPage",
                    "deleteAllTransactionsForCase1960",
                    "US127778"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("004_\"EditTransaction_SubCodes\" Code and Sub Code Behaviors", @__tags);
#line 159
this.ScenarioSetup(scenarioInfo);
#line 160
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 161
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'JAMES CAMERON\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
 testRunner.And(string.Format("Click on More transactions button \'{0}\'", moreTrx), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
 testRunner.And(string.Format("Click to open Transaction with name \'{0}\'", transactionType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
 testRunner.And(string.Format("Enter Transaction Name value \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
 testRunner.And("Enter Transaction Amount value \'500\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
 testRunner.And(string.Format("Select Code by text \'{0}\' using \'Click\' for Transaction", codeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 168
 testRunner.And(string.Format("Select Sub Code by text \'{0}\' using \'Click\' for Transaction", subCodeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
 testRunner.And("Click on Save New Transaction button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
 testRunner.And(string.Format("Click Edit button for Transaction with Name \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
 testRunner.When(string.Format("Select Code by text \'{0}\' using \'Click\' for Transaction", codeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 172
 testRunner.Then("Verify Transaction input field with Name \'Sub Code\' has state \'Enabled\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 173
 testRunner.And(string.Format("Select Sub Code by text \'{0}\' using \'Click\' for Transaction", subCodeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
 testRunner.And("Verify Transaction input field with Name \'Sub Code\' has state \'Enabled\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
 testRunner.And("Verify Transaction input field with Name \'Code\' has state \'Enabled\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("005_\"EditTransaction_SubCodes\" Verify Code and Sub Code fields hide when adding A" +
            "sset Link")]
        [NUnit.Framework.CategoryAttribute("AssetsPage")]
        [NUnit.Framework.CategoryAttribute("deleteAllTransactionsForCase1960")]
        [NUnit.Framework.CategoryAttribute("US128020")]
        [NUnit.Framework.CategoryAttribute("US126968")]
        [NUnit.Framework.TestCaseAttribute("Click", "Deposit Correcting Check", "Yes", "1290", "Franco Deposit Correcting Check 01", "01", new string[0])]
        public virtual void _005_EditTransaction_SubCodesVerifyCodeAndSubCodeFieldsHideWhenAddingAssetLink(string selectMethod, string transactionType, string moreTrx, string codeToSelect, string trxName, string subCodeToSelect, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "AssetsPage",
                    "deleteAllTransactionsForCase1960",
                    "US128020",
                    "US126968"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("005_\"EditTransaction_SubCodes\" Verify Code and Sub Code fields hide when adding A" +
                    "sset Link", @__tags);
#line 187
this.ScenarioSetup(scenarioInfo);
#line 188
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 189
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'JAMES CAMERON MARR\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
 testRunner.And(string.Format("Click on More transactions button \'{0}\'", moreTrx), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 192
 testRunner.And(string.Format("Click to open Transaction with name \'{0}\'", transactionType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
 testRunner.And(string.Format("Enter Transaction Name value \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 194
 testRunner.And("Enter Transaction Amount value \'500\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
 testRunner.And(string.Format("Select Code by text \'{0}\' using \'Click\' for Transaction", codeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
 testRunner.And(string.Format("Select Sub Code by text \'{0}\' using \'Click\' for Transaction", subCodeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
 testRunner.And("Click on Save New Transaction button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
 testRunner.And(string.Format("Click Edit button for Transaction with Name \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
 testRunner.And("Click on Add Asset Link button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
 testRunner.And("Verify Transaction field with Name \'Code\' is not visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 201
 testRunner.And("Verify Transaction field with Name \'Sub Code\' is not visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
 testRunner.And("Search and Select Asset Link with value \'8\' in column \'Asset Number\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
 testRunner.When("Remove Asset Link with Asset Number \'8\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 204
 testRunner.Then("Verify Transaction field with Name \'Code\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 205
 testRunner.And("Verify Transaction field with Name \'Sub Code\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("006_\"EditTransaction_AssetLink\" Verify Add Assets selection behavior")]
        [NUnit.Framework.CategoryAttribute("AssetsPage")]
        [NUnit.Framework.CategoryAttribute("deleteLastGeneratedTransactionForCase1378")]
        [NUnit.Framework.CategoryAttribute("US128020")]
        [NUnit.Framework.TestCaseAttribute("Click", "Deposit Correcting Check", "Yes", "1290", "Franco Deposit Correcting Check 01", "01", "8", "Asset Number", "8", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Click", "Deposit Correcting Check", "Yes", "1290", "Franco Deposit Correcting Check 01", "01", "1270", "Code", "9999", new string[0])]
        public virtual void _006_EditTransaction_AssetLinkVerifyAddAssetsSelectionBehavior(string selectMethod, string transactionType, string moreTrx, string codeToSelect, string trxName, string subCodeToSelect, string value, string columnName, string assetNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "AssetsPage",
                    "deleteLastGeneratedTransactionForCase1378",
                    "US128020"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("006_\"EditTransaction_AssetLink\" Verify Add Assets selection behavior", @__tags);
#line 214
this.ScenarioSetup(scenarioInfo);
#line 215
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 216
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'JOHN WAYNE MYERS\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
 testRunner.And("I save Case ID from \'Banking\' tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
 testRunner.And(string.Format("Click on More transactions button \'{0}\'", moreTrx), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 220
 testRunner.And(string.Format("Click to open Transaction with name \'{0}\'", transactionType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
 testRunner.And(string.Format("Enter Transaction Name value \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
 testRunner.And("Enter Transaction Amount value \'500\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 223
 testRunner.And(string.Format("Select Code by text \'{0}\' using \'Click\' for Transaction", codeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 224
 testRunner.And(string.Format("Select Sub Code by text \'{0}\' using \'Click\' for Transaction", subCodeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 225
 testRunner.And("Click on Save New Transaction button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
 testRunner.And(string.Format("Click Edit button for Transaction with Name \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 227
 testRunner.And("Click on Add Asset Link button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
 testRunner.And(string.Format("Search and Select Asset Link with value \'{0}\' in column \'{1}\'", value, columnName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
 testRunner.When(string.Format("Enter Linked Amount value \'500\' for Asset Number \'{0}\'", assetNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 230
 testRunner.Then("Verify Assets List shows correct data for linked Assets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("007_\"EditTransaction_ClosingCost\" Cannot Select Repeated Claims")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("BankingTransactions")]
        [NUnit.Framework.CategoryAttribute("AddDeposits")]
        [NUnit.Framework.CategoryAttribute("Regression")]
        [NUnit.Framework.CategoryAttribute("DepositsClaimslinks")]
        [NUnit.Framework.CategoryAttribute("AssetsPage")]
        [NUnit.Framework.CategoryAttribute("deleteAllTransactionsForCase1960")]
        [NUnit.Framework.CategoryAttribute("US128022")]
        [NUnit.Framework.TestCaseAttribute("3", "COMPTROLLER OF THE TREASURY", "5800", "Check", "No", "2420", "Franco Check 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("", "Trustee, Regression QA", "2200", "Check", "No", "2420", "Franco Check 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("3", "COMPTROLLER OF THE TREASURY", "5800", "Deposit", "No", "1290", "Franco Deposit 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("", "Trustee, Regression QA", "2200", "Deposit", "No", "1290", "Franco Deposit 01", new string[0])]
        public virtual void _007_EditTransaction_ClosingCostCannotSelectRepeatedClaims(string claim, string claimName, string claimCode, string transactionType, string moreTrx, string codeToSelect, string trxName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CaseDetail",
                    "BankingTransactions",
                    "AddDeposits",
                    "Regression",
                    "DepositsClaimslinks",
                    "AssetsPage",
                    "deleteAllTransactionsForCase1960",
                    "US128022"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("007_\"EditTransaction_ClosingCost\" Cannot Select Repeated Claims", @__tags);
#line 248
this.ScenarioSetup(scenarioInfo);
#line 249
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 250
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'JAMES CAMERON MARR\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 251
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 252
 testRunner.And("I save Case ID from \'Banking\' tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 253
 testRunner.And(string.Format("Click on More transactions button \'{0}\'", moreTrx), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 254
 testRunner.And(string.Format("Click to open Transaction with name \'{0}\'", transactionType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 255
 testRunner.And(string.Format("Enter Transaction Name value \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 256
 testRunner.And("Enter Transaction Amount value \'0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 257
 testRunner.And(string.Format("Select Code by text \'{0}\' using \'Click\' for Transaction", codeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 258
 testRunner.And("Click on Save New Transaction button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 259
 testRunner.And(string.Format("Click Edit button for Transaction with Name \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 260
 testRunner.And("I Click On ADD Claim Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 261
 testRunner.When(string.Format("I Search And Select Claim To Link On Row \'1\' By Claim Number \'{0}\' And Claim Name" +
                        " \'{1}\' And Claim Code \'{2}\'", claim, claimName, claimCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 262
 testRunner.And("I Click On ADD Claim Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 263
 testRunner.And("I Click On Claim Search Box For Row \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 264
 testRunner.And(string.Format("I Enter Text \'{0}\' on Claim Search Box Filter For Row \'2\'", claimName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 265
 testRunner.Then(string.Format("I See No Claim Result On Row \'2\' Has Claim Number \'{0}\' And Claim Name \'{1}\' And " +
                        "Claim Code \'{2}\'", claim, claimName, claimCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("008A_\"EditTransaction_AssetLinks\" Save With Assets Links And verify Assets Displa" +
            "y on Ledger")]
        [NUnit.Framework.CategoryAttribute("RegressionFixesIt34")]
        [NUnit.Framework.CategoryAttribute("AssetsPage")]
        [NUnit.Framework.CategoryAttribute("deleteLastGeneratedTransactionForCase1378")]
        [NUnit.Framework.CategoryAttribute("US128022")]
        [NUnit.Framework.TestCaseAttribute("Deposit Correcting Check", "Yes", "1290", "Franco Deposit Correcting Check 01", "Franco Deposit Correcting Check 01", "$300.00", "$300.00", "8", "2003 DODGE PICKUP 45K MILES EXCELLENT", "1110", "$100.00", "4", "COUCH/CHAIR/LOVE SEAT/2 END TABLES/2 TVS/COMPUTER/", "1290", "$200.00", new string[0])]
        public virtual void _008A_EditTransaction_AssetLinksSaveWithAssetsLinksAndVerifyAssetsDisplayOnLedger(
                    string transactionType, 
                    string moreTrx, 
                    string codeToSelect, 
                    string trxName, 
                    string payTo, 
                    string netDeposit, 
                    string grossDeposit, 
                    string asset1, 
                    string assetName1, 
                    string assetCode1, 
                    string assetAmount1, 
                    string asset2, 
                    string assetName2, 
                    string assetCode2, 
                    string assetAmount2, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionFixesIt34",
                    "AssetsPage",
                    "deleteLastGeneratedTransactionForCase1378",
                    "US128022"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("008A_\"EditTransaction_AssetLinks\" Save With Assets Links And verify Assets Displa" +
                    "y on Ledger", @__tags);
#line 279
this.ScenarioSetup(scenarioInfo);
#line 280
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 281
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'JOHN WAYNE MYERS\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 282
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 283
 testRunner.And("I save Case ID from \'Banking\' tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 284
 testRunner.And(string.Format("Click on More transactions button \'{0}\'", moreTrx), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 285
 testRunner.And(string.Format("Click to open Transaction with name \'{0}\'", transactionType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 286
 testRunner.And(string.Format("Enter Transaction Name value \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 287
 testRunner.And("Enter Transaction Amount value \'300\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 288
 testRunner.And(string.Format("Select Code by text \'{0}\' using \'Click\' for Transaction", codeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 289
 testRunner.And("Click on Save New Transaction button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 290
 testRunner.And(string.Format("Click Edit button for Transaction with Name \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 291
 testRunner.And("I Click On ADD Asset Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 292
 testRunner.And(string.Format("I Search And Select Asset To Link On Row \'1\' By Asset Number \'{0}\' And Asset Name" +
                        " \'{1}\' And Asset Code \'{2}\'", asset1, assetName1, assetCode1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 293
 testRunner.And(string.Format("I Enter Asset Linked Amount \'{0}\' On Row \'1\'", assetAmount1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 294
 testRunner.And("I Enter Asset Fully Administered Date \'Today\' On Row \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 295
 testRunner.And("I Click On ADD Asset Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 296
 testRunner.And(string.Format("I Search And Select Asset To Link On Row \'2\' By Asset Number \'{0}\' And Asset Name" +
                        " \'{1}\' And Asset Code \'\'", asset2, assetName2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 297
 testRunner.And(string.Format("I Enter Asset Linked Amount \'{0}\' On Row \'2\'", assetAmount2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 298
 testRunner.When("I Click On Save Deposit For Save With Links", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 299
 testRunner.Then(string.Format("I See The Transaction Displays Data Correctly On Transactions List \'{0}\',\'SPLIT\'," +
                        "\'{1}\',\'{2}\',\'{3}\',\'{4}\',\'{5}\',\'{6}\',\'{7}\'", payTo, netDeposit, asset2, assetName2, assetAmount2, asset1, assetName1, assetAmount1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 300
 testRunner.And(string.Format("I Verify Transaction Basic Data Was Correctly Saved On DB As Pay To \'{0}\' Code \'S" +
                        "PLIT\' And Amount \'{1}\'", payTo, netDeposit), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 301
 testRunner.And("I Verify Assets Links For Deposit Were Correctly Saved On DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("009_\"EditTransaction_Code\" Dropdown new behavior")]
        [NUnit.Framework.CategoryAttribute("deleteAllTransactionsForCase1960")]
        [NUnit.Framework.CategoryAttribute("AssetsPage")]
        [NUnit.Framework.CategoryAttribute("118916")]
        [NUnit.Framework.TestCaseAttribute("Beginning", "2420", "Check", "No", "2420", "Franco Check 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("End", "2420", "Check", "No", "2420", "Franco Check 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Highlighted", "2420", "Check", "No", "2420", "Franco Check 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Beginning", "1290", "Deposit", "No", "1290", "Franco Deposit 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("End", "1290", "Deposit", "No", "1290", "Franco Deposit 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Highlighted", "1290", "Deposit", "No", "1290", "Franco Deposit 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Beginning", "1290", "Deposit Correcting Check", "Yes", "1290", "Franco Deposit Correcting Check 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("End", "1290", "Deposit Correcting Check", "Yes", "1290", "Franco Deposit Correcting Check 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Highlighted", "1290", "Deposit Correcting Check", "Yes", "1290", "Franco Deposit Correcting Check 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Beginning", "2420", "Bank Service Charge", "Yes", "2420", "Franco Bank Service Charge 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("End", "2420", "Bank Service Charge", "Yes", "2420", "Franco Bank Service Charge 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Highlighted", "2420", "Bank Service Charge", "Yes", "2420", "Franco Bank Service Charge 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Beginning", "2420", "Bank Service Charge Refund (Neg)", "Yes", "2420", "Franco Bank Service Charge Refund (Neg) 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("End", "2420", "Bank Service Charge Refund (Neg)", "Yes", "2420", "Franco Bank Service Charge Refund (Neg) 01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Highlighted", "2420", "Bank Service Charge Refund (Neg)", "Yes", "2420", "Franco Bank Service Charge Refund (Neg) 01", new string[0])]
        public virtual void _009_EditTransaction_CodeDropdownNewBehavior(string position, string text, string transactionType, string moreTrx, string codeToSelect, string trxName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "deleteAllTransactionsForCase1960",
                    "AssetsPage",
                    "118916"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("009_\"EditTransaction_Code\" Dropdown new behavior", @__tags);
#line 310
this.ScenarioSetup(scenarioInfo);
#line 311
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 312
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'JAMES CAMERON\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 313
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 314
 testRunner.And(string.Format("Click on More transactions button \'{0}\'", moreTrx), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 315
 testRunner.And(string.Format("Click to open Transaction with name \'{0}\'", transactionType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 316
 testRunner.And(string.Format("Enter Transaction Name value \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
 testRunner.And("Enter Transaction Amount value \'500\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
 testRunner.And(string.Format("Select Code by text \'{0}\' using \'Click\' for Transaction", codeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 319
 testRunner.And("Click on Save New Transaction button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 320
 testRunner.When(string.Format("Click Edit button for Transaction with Name \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 321
 testRunner.Then(string.Format("Select value with text \'{0}\' typing at position \'{1}\' on field \'Code\' using \'Clic" +
                        "k\' for Transaction", text, position), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("011A_\"EditTransaction_ClaimLinks\" Add Claim Link - Save Edit Check (2 Links)")]
        [NUnit.Framework.CategoryAttribute("deleteAllTransactionsForCase1960")]
        [NUnit.Framework.CategoryAttribute("deleteLastGeneratedTransactionForCase1378")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("BankingTransactions")]
        [NUnit.Framework.CategoryAttribute("ChecksClaimsLink")]
        [NUnit.Framework.CategoryAttribute("TransactionSaving")]
        [NUnit.Framework.CategoryAttribute("Regression")]
        [NUnit.Framework.TestCaseAttribute("Deposit Correcting Check", "Franco Check 01", "No", "2420", "Franco Check 01", "$5,000.00", "6", "CAPITAL ONE BANK (USA) N. A.", "7100", "$5,000.00", "1", "DISCOVER BANK", "7100", "$0.00", new string[0])]
        public virtual void _011A_EditTransaction_ClaimLinksAddClaimLink_SaveEditCheck2Links(string transactionType, string trxName, string moreTrx, string codeToSelect, string payTo, string checkAmount, string claim1, string claimName1, string claimCode1, string amount1, string claim2, string claimName2, string claimCode2, string amount2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "deleteAllTransactionsForCase1960",
                    "deleteLastGeneratedTransactionForCase1378",
                    "CaseDetail",
                    "BankingTransactions",
                    "ChecksClaimsLink",
                    "TransactionSaving",
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("011A_\"EditTransaction_ClaimLinks\" Add Claim Link - Save Edit Check (2 Links)", @__tags);
#line 385
this.ScenarioSetup(scenarioInfo);
#line 386
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 387
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'JOHN WAYNE MYERS\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 388
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 389
 testRunner.And("Click on More transactions button \'No\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 390
 testRunner.And(string.Format("Click to open Transaction with name \'{0}\'", transactionType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 391
 testRunner.And(string.Format("Enter Transaction Name value \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 392
 testRunner.And("Enter Transaction Amount value \'5000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 393
 testRunner.And(string.Format("Select Code by text \'{0}\' using \'Click\' for Transaction", codeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 394
 testRunner.And("I Click On ADD Claim Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 395
 testRunner.And(string.Format("I Search And Select Claim To Link On Row \'1\' By Claim Number \'{0}\' And Claim Name" +
                        " \'{1}\' And Claim Code \'{2}\'", claim1, claimName1, claimCode1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 396
 testRunner.And(string.Format("I Enter Claim Link Amount \'{0}\' On Row \'1\'", amount1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 397
 testRunner.And("Click on Save New Transaction button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 398
 testRunner.And(string.Format("Click Edit button for Transaction with Name \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 399
 testRunner.And("I Click On ADD Claim Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 400
 testRunner.And(string.Format("I See Claim Link Row \'1\' With Claim # \'{0}\' Name \'{1}\' Code \'{2}\' Allocation Desc" +
                        "ription \'\' Non-Compensable \'False\' And Amount \'{3}\'", claim1, claimName1, claimCode1, amount1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 401
 testRunner.And(string.Format("I Search And Select Claim To Link On Row \'2\' By Claim Number \'{0}\' And Claim Name" +
                        " \'{1}\' And Claim Code \'{2}\'", claim2, claimName2, claimCode2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 402
 testRunner.And(string.Format("I See Claim Link Row \'2\' With Claim # \'{0}\' Name \'{1}\' Code \'{2}\' Allocation Desc" +
                        "ription \'\' Non-Compensable \'False\' And Amount \'\'", claim2, claimName2, claimCode2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 403
 testRunner.And(string.Format("I Enter Claim Link Amount \'{0}\' On Row \'2\'", amount2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 404
 testRunner.And(string.Format("I See Claim Link Row \'2\' With Claim # \'{0}\' Name \'{1}\' Code \'{2}\' Allocation Desc" +
                        "ription \'\' Non-Compensable \'False\' And Amount \'{3}\'", claim2, claimName2, claimCode2, amount2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 405
 testRunner.And(string.Format("I Enter Pay To The Order Of \'{0}\'", payTo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 406
 testRunner.When("I Click On Save Check For Claim Links", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 407
 testRunner.Then(string.Format("I See The Transaction Displays Data Correctly On Transactions List \'{0}\',\'SPLIT\'," +
                        "\'{1}\',\'{2}\',\'{3}\',\'{4}\',\'{5}\',\'{6}\',\'{7}\'", payTo, checkAmount, claim1, claimName1, amount1, claim2, claimName2, amount2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 408
 testRunner.And(string.Format("I Verify Transaction Basic Data Was Correctly Saved On DB As Pay To \'{0}\' Code \'S" +
                        "PLIT\' And Amount \'{1}\'", payTo, checkAmount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 409
 testRunner.And("I Verify Claim Links For Check Were Correctly Saved on DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("011B_\"EditTransaction_ClaimLinks\" Add Claim Link - Save Edit Check (2 Links)")]
        [NUnit.Framework.CategoryAttribute("RegressionFixesIt34")]
        [NUnit.Framework.CategoryAttribute("deleteLastGeneratedTransactionForCase1378")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("BankingTransactions")]
        [NUnit.Framework.CategoryAttribute("ChecksClaimsLink")]
        [NUnit.Framework.CategoryAttribute("TransactionSaving")]
        [NUnit.Framework.CategoryAttribute("Regression")]
        [NUnit.Framework.TestCaseAttribute("Deposit Correcting Check", "Franco Deposit 01", "No", "1290", "Franco Deposit 01", "$5,000.00", "6", "CAPITAL ONE BANK (USA) N. A.", "7100", "$0.00", "1", "DISCOVER BANK", "7100", "$0.00", new string[0])]
        public virtual void _011B_EditTransaction_ClaimLinksAddClaimLink_SaveEditCheck2Links(string transactionType, string trxName, string moreTrx, string codeToSelect, string payTo, string checkAmount, string claim1, string claimName1, string claimCode1, string amount1, string claim2, string claimName2, string claimCode2, string amount2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionFixesIt34",
                    "deleteLastGeneratedTransactionForCase1378",
                    "CaseDetail",
                    "BankingTransactions",
                    "ChecksClaimsLink",
                    "TransactionSaving",
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("011B_\"EditTransaction_ClaimLinks\" Add Claim Link - Save Edit Check (2 Links)", @__tags);
#line 421
this.ScenarioSetup(scenarioInfo);
#line 422
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 423
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'JOHN WAYNE MYERS\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 424
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 425
 testRunner.And("Click on More transactions button \'No\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 426
 testRunner.And(string.Format("Click to open Transaction with name \'{0}\'", transactionType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 427
 testRunner.And(string.Format("Enter Transaction Name value \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 428
 testRunner.And("Enter Transaction Amount value \'5000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 429
 testRunner.And(string.Format("Select Code by text \'{0}\' using \'Click\' for Transaction", codeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 430
 testRunner.And("I Click On ADD Claim Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 431
 testRunner.And(string.Format("I Search And Select Claim To Link On Row \'1\' By Claim Number \'{0}\' And Claim Name" +
                        " \'{1}\' And Claim Code \'{2}\'", claim1, claimName1, claimCode1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 432
 testRunner.And(string.Format("I Enter Claim Link Amount \'{0}\' On Row \'1\'", amount1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 433
 testRunner.And("Click on Save New Transaction button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 434
 testRunner.And(string.Format("Click Edit button for Transaction with Name \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 435
 testRunner.And("I Click On ADD Claim Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 436
 testRunner.And(string.Format("I See Claim Link Row \'1\' With Claim # \'{0}\' Name \'{1}\' Code \'{2}\' Allocation Desc" +
                        "ription \'\' Non-Compensable \'False\' And Amount \'{3}\'", claim1, claimName1, claimCode1, amount1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 437
 testRunner.And(string.Format("I Search And Select Claim To Link On Row \'2\' By Claim Number \'{0}\' And Claim Name" +
                        " \'{1}\' And Claim Code \'{2}\'", claim2, claimName2, claimCode2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 438
 testRunner.And(string.Format("I See Claim Link Row \'2\' With Claim # \'{0}\' Name \'{1}\' Code \'{2}\' Allocation Desc" +
                        "ription \'\' Non-Compensable \'False\' And Amount \'\'", claim2, claimName2, claimCode2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 439
 testRunner.And(string.Format("I Enter Claim Link Amount \'{0}\' On Row \'2\'", amount2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 440
 testRunner.And(string.Format("I See Claim Link Row \'2\' With Claim # \'{0}\' Name \'{1}\' Code \'{2}\' Allocation Desc" +
                        "ription \'\' Non-Compensable \'False\' And Amount \'{3}\'", claim2, claimName2, claimCode2, amount2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 441
 testRunner.And(string.Format("I Enter Pay To The Order Of \'{0}\'", payTo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 442
 testRunner.When("I Click On Save Deposit For Save With Links", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 443
 testRunner.Then(string.Format("I See The Transaction Displays Data Correctly On Transactions List \'{0}\',\'SPLIT\'," +
                        "\'{1}\',\'{2}\',\'{3}\',\'{4}\',\'{5}\',\'{6}\',\'{7}\'", payTo, checkAmount, claim1, claimName1, amount1, claim2, claimName2, amount2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 444
 testRunner.And(string.Format("I Verify Transaction Basic Data Was Correctly Saved On DB As Pay To \'{0}\' Code \'S" +
                        "PLIT\' And Amount \'{1}\'", payTo, checkAmount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 445
 testRunner.And("I Verify Claim Links For Deposit Were Correctly Saved on DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("012_\"EditTransaction_ClaimLinks\" Add Claim Link - Remove")]
        [NUnit.Framework.CategoryAttribute("deleteLastGeneratedTransactionForCase1378")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("BankingTransactions")]
        [NUnit.Framework.CategoryAttribute("ChecksClaimsLink")]
        [NUnit.Framework.CategoryAttribute("Regression")]
        [NUnit.Framework.CategoryAttribute("US113140")]
        [NUnit.Framework.CategoryAttribute("TC?")]
        [NUnit.Framework.TestCaseAttribute("Check", "Franco Check 01", "No", "2420", "ADD CLAIM LINK", "$500.00", new string[0])]
        public virtual void _012_EditTransaction_ClaimLinksAddClaimLink_Remove(string transactionType, string trxName, string moreTrx, string codeToSelect, string claimLinkLbl, string claimAmount, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "deleteLastGeneratedTransactionForCase1378",
                    "CaseDetail",
                    "BankingTransactions",
                    "ChecksClaimsLink",
                    "Regression",
                    "US113140",
                    "TC?"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("012_\"EditTransaction_ClaimLinks\" Add Claim Link - Remove", @__tags);
#line 458
this.ScenarioSetup(scenarioInfo);
#line 459
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 460
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'JOHN WAYNE MYERS\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 461
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 462
 testRunner.And("Click on More transactions button \'No\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 463
 testRunner.And(string.Format("Click to open Transaction with name \'{0}\'", transactionType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 464
 testRunner.And(string.Format("Enter Transaction Name value \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 465
 testRunner.And("Enter Transaction Amount value \'500\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 466
 testRunner.And(string.Format("Select Code by text \'{0}\' using \'Click\' for Transaction", codeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 467
 testRunner.And("I Click On ADD Claim Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 468
 testRunner.And("I Select The First Claim To Link On Row \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 469
 testRunner.And(string.Format("I Enter Claim Link Amount \'{0}\' On Row \'1\'", claimAmount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 470
 testRunner.And("Click on Save New Transaction button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("013_\"EditTransaction_ClaimLinks\" Save With Claim Link & Split UTC")]
        [NUnit.Framework.CategoryAttribute("deleteLastGeneratedTransactionForCase1378")]
        [NUnit.Framework.CategoryAttribute("CaseDetail")]
        [NUnit.Framework.CategoryAttribute("BankingTransactions")]
        [NUnit.Framework.CategoryAttribute("TransactionSaving")]
        [NUnit.Framework.CategoryAttribute("Regression")]
        [NUnit.Framework.CategoryAttribute("US111938")]
        [NUnit.Framework.CategoryAttribute("TC118489")]
        [NUnit.Framework.CategoryAttribute("Bug127761Fixed")]
        [NUnit.Framework.CategoryAttribute("Bug154406")]
        [NUnit.Framework.TestCaseAttribute("Check", "Franco Check 01", "No", "2420", new string[0])]
        public virtual void _013_EditTransaction_ClaimLinksSaveWithClaimLinkSplitUTC(string transactionType, string trxName, string moreTrx, string codeToSelect, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "deleteLastGeneratedTransactionForCase1378",
                    "CaseDetail",
                    "BankingTransactions",
                    "TransactionSaving",
                    "Regression",
                    "US111938",
                    "TC118489",
                    "Bug127761Fixed",
                    "Bug154406"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("013_\"EditTransaction_ClaimLinks\" Save With Claim Link & Split UTC", @__tags);
#line 493
this.ScenarioSetup(scenarioInfo);
#line 494
 testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 495
 testRunner.And("I Enter to Case Detail page for Case with Case Number \'JOHN WAYNE MYERS\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 496
 testRunner.And("I Go to Banking Detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 497
 testRunner.And("Click on More transactions button \'No\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 498
 testRunner.And(string.Format("Click to open Transaction with name \'{0}\'", transactionType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 499
 testRunner.And(string.Format("Enter Transaction Name value \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 500
 testRunner.And("Enter Transaction Amount value \'400\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 501
 testRunner.And(string.Format("Select Code by text \'{0}\' using \'Click\' for Transaction", codeToSelect), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 502
 testRunner.And("I Click On ADD UTC Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 503
 testRunner.And("I Set UTC Row Number \'1\' Name \'UTC Split Name # 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 504
 testRunner.And("I Set UTC Row Number \'1\' Code \'2300\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 505
 testRunner.And("I Set UTC Row Number \'1\' Allocation Description \'Allocation Description # 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 506
 testRunner.And("I Set UTC Row Number \'1\' Non-Compensable \'True\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 507
 testRunner.And("I Set UTC Row Number \'1\' Amount \'200.00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 508
 testRunner.And("I Set UTC Row Number \'2\' Name \'UTC Split Name # 2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 509
 testRunner.And("I Set UTC Row Number \'2\' Code \'2200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 510
 testRunner.And("I Set UTC Row Number \'2\' Allocation Description \'Allocation Description # 2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 511
 testRunner.And("I Set UTC Row Number \'2\' Non-Compensable \'False\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 512
 testRunner.And("I Set UTC Row Number \'2\' Amount \'200.00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 513
 testRunner.And("Click on Save New Transaction button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 514
 testRunner.And(string.Format("Click Edit button for Transaction with Name \'{0}\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 515
 testRunner.And("I Click On ADD Claim Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 516
 testRunner.And("I Search And Select Claim To Link On Row \'1\' By Claim Number \'8\' And Claim Name \'" +
                    "CAPITAL RECOVERY V, LLC\' And Claim Code \'7100\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 517
 testRunner.And("I Enter Claim Link Amount \'$0.00\' On Row \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 518
 testRunner.When("I Click On Save Check For UTC Split And Claim Links", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 519
 testRunner.Then(string.Format("I See The Transaction Displays Data Correctly On Transactions List \'{0}\',\'SPLIT\'," +
                        "\'$400.00\',\'8\',\'CAPITAL RECOVERY V, LLC\',\'\',\'\',\'\',\'\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 520
 testRunner.And(string.Format("I Verify Transaction Basic Data Was Correctly Saved On DB As Pay To \'{0}\' Code \'S" +
                        "PLIT\' And Amount \'$400.00\'", trxName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 521
 testRunner.And("I Verify on DB That UTC Splits Have Been Saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 522
 testRunner.And("I Verify Claim Links For Check Were Correctly Saved on DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
