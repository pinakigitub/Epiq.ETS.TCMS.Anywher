// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Epiq.ETS.TCMS.Anywhere.Testing.E2ETest.Features.UserManagement
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("UserManagement")]
    [NUnit.Framework.CategoryAttribute("Regression")]
    [NUnit.Framework.CategoryAttribute("ReactJS")]
    public partial class UserManagementFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "UserManagement.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "UserManagement", "Navigating to the different sections \r\nunder User Management page", ProgrammingLanguage.CSharp, new string[] {
                        "Regression",
                        "ReactJS"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("001 - User Management page Validation")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void _001_UserManagementPageValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("001 - User Management page Validation", new string[] {
                        "mytag"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.Then("\'User Management\' header should be displayed on User Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
 testRunner.Then("Users result should be present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 12
 testRunner.When("I click on Add User Button on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
 testRunner.Then("\'Add User\' header should be displayed on AddUser Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
 testRunner.And("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("002 - Add User - back to User Management link validation")]
        public virtual void _002_AddUser_BackToUserManagementLinkValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("002 - Add User - back to User Management link validation", ((string[])(null)));
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
 testRunner.Then("\'User Management\' header should be displayed on User Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 19
 testRunner.When("I click on Add User Button on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.Then("I should be on Add User page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 21
 testRunner.Then("I click on BreadCrumb \'User Management\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 22
 testRunner.Then("Then I should be on User Management page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 23
 testRunner.And("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("003 - Add User - Add user validation")]
        public virtual void _003_AddUser_AddUserValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("003 - Add User - Add user validation", ((string[])(null)));
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
 testRunner.Then("\'User Management\' header should be displayed on User Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 28
 testRunner.When("I click on Add User Button on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.Then("I should be on Add User page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 30
 testRunner.When("I enter User Name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
 testRunner.And("I enter Password \'TestUser@1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And("I enter Email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.And("I enter Display Name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And("I enter Sort Name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.And("I select Trustee", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.Then("record should be created on Save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 37
 testRunner.Then("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("004 - Add User - Add user with Role and permission")]
        [NUnit.Framework.CategoryAttribute("US232439")]
        [NUnit.Framework.CategoryAttribute("US214368")]
        public virtual void _004_AddUser_AddUserWithRoleAndPermission()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("004 - Add User - Add user with Role and permission", new string[] {
                        "US232439",
                        "US214368"});
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
 testRunner.Then("\'User Management\' header should be displayed on User Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 43
 testRunner.When("I click on Add User Button on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
 testRunner.Then("I should be on Add User page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
 testRunner.When("I enter User Name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
 testRunner.And("I enter Password \'TestUser@1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.And("I enter Email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.And("I enter Display Name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.And("I enter Sort Name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.And("I select Trustee", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.And("I click on Role Button on Add User Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.And("I Select Role \'Assets\' on Add role page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
 testRunner.And("I select Permission \'Asset\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.Then("record should be created on Save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 55
 testRunner.Then("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("005 - Edit the user details validation")]
        public virtual void _005_EditTheUserDetailsValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("005 - Edit the user details validation", ((string[])(null)));
#line 58
this.ScenarioSetup(scenarioInfo);
#line 59
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 60
 testRunner.Then("\'User Management\' header should be displayed on User Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 61
 testRunner.When("I click on edit button of User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
 testRunner.Then("I should be on User Edit page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 63
 testRunner.When("I click on Active toggle", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
 testRunner.When("I edit email Id of user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
 testRunner.Then("record should be updated on Save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 66
 testRunner.Then("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("006 - Password validation on Add User with correct format")]
        public virtual void _006_PasswordValidationOnAddUserWithCorrectFormat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("006 - Password validation on Add User with correct format", ((string[])(null)));
#line 68
this.ScenarioSetup(scenarioInfo);
#line 69
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
      testRunner.Then("\'User Management\' header should be displayed on User Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 71
 testRunner.When("I click on Add User Button on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
      testRunner.Then("I should be on Add User page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 73
 testRunner.When("I enter User Name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
 testRunner.And("I enter Password \'TestUser@1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
     testRunner.Then("Validate all password conditions are satisfied on add user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 76
 testRunner.Then("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("007 - Password validation on Add User with Incorrect format")]
        public virtual void _007_PasswordValidationOnAddUserWithIncorrectFormat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("007 - Password validation on Add User with Incorrect format", ((string[])(null)));
#line 78
this.ScenarioSetup(scenarioInfo);
#line 79
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 80
      testRunner.Then("\'User Management\' header should be displayed on User Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 81
 testRunner.When("I click on Add User Button on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 82
      testRunner.Then("I should be on Add User page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 83
 testRunner.When("I enter User Name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
 testRunner.And("I enter Password \'Pwd123#\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
     testRunner.Then("Validate password conditions are not satisfied completly on add user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 86
  testRunner.And("I clear the Password on Add User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
 testRunner.When("I enter Password \'123456789\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 88
     testRunner.Then("Validate password conditions are not satisfied completly on add user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 89
  testRunner.And("I clear the Password on Add User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
 testRunner.When("I enter Password \'ABCDEFGHI\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
     testRunner.Then("Validate password conditions are not satisfied completly on add user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 92
  testRunner.And("I clear the Password on Add User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.When("I enter Password \'abcdefghi\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
     testRunner.Then("Validate password conditions are not satisfied completly on add user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 95
  testRunner.And("I clear the Password on Add User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.When("I enter Password \'@#$%&@#!#\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
     testRunner.Then("Validate password conditions are not satisfied completly on add user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 98
     testRunner.And("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("008 - Edit a user - In Office")]
        [NUnit.Framework.CategoryAttribute("US199377")]
        public virtual void _008_EditAUser_InOffice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("008 - Edit a user - In Office", new string[] {
                        "US199377"});
#line 101
this.ScenarioSetup(scenarioInfo);
#line 102
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 103
 testRunner.Then("\'User Management\' header should be displayed on User Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 104
 testRunner.When("I click on edit button of User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 105
 testRunner.Then("UserName should be non editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 106
 testRunner.And("Password should not be display on editing user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
 testRunner.And("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("009- Make the user Locked Out")]
        [NUnit.Framework.CategoryAttribute("US199707")]
        public virtual void _009_MakeTheUserLockedOut()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("009- Make the user Locked Out", new string[] {
                        "US199707"});
#line 110
this.ScenarioSetup(scenarioInfo);
#line 111
    testRunner.Given("I enter to Unity Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 112
 testRunner.When("I try to login with credentials TestuserA, WrongPwdA and crose", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 113
 testRunner.And("I try to login with credentials TestuserA, WrongPwdB and crose", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
 testRunner.And("I try to login with credentials TestuserA, WrongPwdC and crose", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
 testRunner.And("I try to login with credentials TestuserA, WrongPwdD and crose", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.And("I try to login with credentials Automation, Automation1! and crose", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
 testRunner.Then("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("011 - Add User - Verify Permission Section")]
        [NUnit.Framework.CategoryAttribute("US232439")]
        public virtual void _011_AddUser_VerifyPermissionSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("011 - Add User - Verify Permission Section", new string[] {
                        "US232439"});
#line 129
this.ScenarioSetup(scenarioInfo);
#line 130
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 131
 testRunner.Then("\'User Management\' header should be displayed on User Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 132
 testRunner.When("I click on Add User Button on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 133
 testRunner.And("I see label User Level Permission on top of Perimission Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
 testRunner.When("I Click On Permission Button on User Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 135
 testRunner.Then("I see \'CATEGORY\',\'NAME\',\'DESCRIPTION\' headers on add permisson", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 136
 testRunner.Then("I select few permissions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 137
 testRunner.When("I click on all red circle button of added permissions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
 testRunner.Then("all Pemissions should be deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 139
 testRunner.And("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("012 - Add User - Verify Role Section")]
        [NUnit.Framework.CategoryAttribute("US214368")]
        public virtual void _012_AddUser_VerifyRoleSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("012 - Add User - Verify Role Section", new string[] {
                        "US214368"});
#line 142
this.ScenarioSetup(scenarioInfo);
#line 143
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 144
 testRunner.Then("\'User Management\' header should be displayed on User Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 145
 testRunner.When("I click on Add User Button on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 146
 testRunner.And("I click on Role Button on Add User Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
 testRunner.When("I Click On Circle Arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 148
 testRunner.Then("I See assigned permission to the role on Add Role", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 149
 testRunner.When("I Click On Circle Arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 150
 testRunner.And("I Select Role \'Assets\' on Add role page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
 testRunner.And("I click on Expand Arrow for one Role", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
 testRunner.Then("I See permissions assigned to the role on Add User Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 153
 testRunner.And("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("013 - Add User -Verification on Permission in list after adding on User")]
        [NUnit.Framework.CategoryAttribute("US214371")]
        public virtual void _013_AddUser_VerificationOnPermissionInListAfterAddingOnUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("013 - Add User -Verification on Permission in list after adding on User", new string[] {
                        "US214371"});
#line 156
this.ScenarioSetup(scenarioInfo);
#line 157
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 158
 testRunner.Then("\'User Management\' header should be displayed on User Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 159
 testRunner.When("I click on Add User Button on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 160
 testRunner.And("I select Permission \'Asset\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
 testRunner.When("I Click On Permission Button on User Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 162
 testRunner.Then("I See \'Asset\' not listed in Permission list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 163
 testRunner.And("I Click on Cancel Button on Add Permission", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
 testRunner.And("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("014 - Add User -Verification on Permission List after adding ALL on User")]
        [NUnit.Framework.CategoryAttribute("US214371")]
        public virtual void _014_AddUser_VerificationOnPermissionListAfterAddingALLOnUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("014 - Add User -Verification on Permission List after adding ALL on User", new string[] {
                        "US214371"});
#line 167
this.ScenarioSetup(scenarioInfo);
#line 168
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 169
 testRunner.Then("\'User Management\' header should be displayed on User Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 170
 testRunner.When("I click on Add User Button on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 171
 testRunner.And("I Click On Permission Button on User Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
 testRunner.And("I select and add all permissions from List to user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
 testRunner.And("I go to top of permission section and Click on permission Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
 testRunner.Then("I see no list of pemission displaying on Add Permission", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 175
 testRunner.And("I Click on Cancel Button on Add Permission", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
 testRunner.And("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("015 - Add User - Verification on Role in list after adding on User")]
        [NUnit.Framework.CategoryAttribute("US232434")]
        public virtual void _015_AddUser_VerificationOnRoleInListAfterAddingOnUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("015 - Add User - Verification on Role in list after adding on User", new string[] {
                        "US232434"});
#line 179
this.ScenarioSetup(scenarioInfo);
#line 180
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 181
 testRunner.Then("\'User Management\' header should be displayed on User Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 182
 testRunner.When("I click on Add User Button on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 183
 testRunner.And("I click on Role Button on Add User Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
 testRunner.And("I Select Role \'Assets\' on Add role page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
 testRunner.And("I click on Role Button on Add User Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 186
 testRunner.Then("I See \'Assets\' not listed in Role list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 187
 testRunner.And("I Click on Cancel Button on Add Role", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 188
 testRunner.And("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("016 - Add Permissions Modal - Filter Option Validation")]
        [NUnit.Framework.CategoryAttribute("US213868")]
        public virtual void _016_AddPermissionsModal_FilterOptionValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("016 - Add Permissions Modal - Filter Option Validation", new string[] {
                        "US213868"});
#line 191
this.ScenarioSetup(scenarioInfo);
#line 192
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 193
 testRunner.Then("\'User Management\' header should be displayed on User Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 194
 testRunner.When("I click on Add User Button on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 195
 testRunner.And("I see label User Level Permission on top of Perimission Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
 testRunner.When("I Click On Permission Button on User Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 197
 testRunner.When("I filter permission \'Admin\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 198
 testRunner.Then("I see filter result showing \'Admin\' Permissions only", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 199
 testRunner.And("I Click on Cancel Button on Add Permission", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
 testRunner.And("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("017 - Roles - Add Roles Page Validation")]
        [NUnit.Framework.CategoryAttribute("US199844")]
        public virtual void _017_Roles_AddRolesPageValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("017 - Roles - Add Roles Page Validation", new string[] {
                        "US199844"});
#line 203
this.ScenarioSetup(scenarioInfo);
#line 204
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 205
 testRunner.Then("\'User Management\' header should be displayed on User Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 206
 testRunner.When("I Click on Roles Icon on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 207
 testRunner.Then("I should be on Role Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 208
 testRunner.Then("I see Coulmns on Roles Page \'NAME\',\'DESCRIPTION\',\'TYPE\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 209
 testRunner.When("I Click on Add Roles Button on Role Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 210
 testRunner.Then("I See the Add-role page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 211
 testRunner.Then("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("018 - Roles - Creating Roles Validation")]
        [NUnit.Framework.CategoryAttribute("US199844")]
        public virtual void _018_Roles_CreatingRolesValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("018 - Roles - Creating Roles Validation", new string[] {
                        "US199844"});
#line 214
this.ScenarioSetup(scenarioInfo);
#line 215
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 216
 testRunner.When("I Click on Roles Icon on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 217
 testRunner.When("I Click on Add Roles Button on Role Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 218
 testRunner.Then("I Add Role Name on Add Role Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 219
 testRunner.And("I add description on Add Role Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 220
 testRunner.And("I select permission \'Admin\' on Add Role Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
 testRunner.And("Role should be created on Save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
 testRunner.Then("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("019 - Roles - Cancel on Editing Role")]
        [NUnit.Framework.CategoryAttribute("US199844")]
        public virtual void _019_Roles_CancelOnEditingRole()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("019 - Roles - Cancel on Editing Role", new string[] {
                        "US199844"});
#line 225
this.ScenarioSetup(scenarioInfo);
#line 226
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 227
 testRunner.When("I Click on Roles Icon on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 228
 testRunner.When("I Click on Edit button of role", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 229
 testRunner.Then("I Edit and click on Cancel Button and validate Edit Name is not changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 230
 testRunner.Then("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("020 - Roles - Verify Roles Page and edit the roles")]
        public virtual void _020_Roles_VerifyRolesPageAndEditTheRoles()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("020 - Roles - Verify Roles Page and edit the roles", ((string[])(null)));
#line 232
this.ScenarioSetup(scenarioInfo);
#line 233
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 234
 testRunner.Then("\'User Management\' header should be displayed on User Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 235
    testRunner.When("I Click on Roles Icon on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 236
 testRunner.When("I Click on Edit button of role", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 237
    testRunner.Then("I select permission \'Asset\' on edit Role Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 238
 testRunner.Then("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("021 - Roles - Edit the roles after removing the data")]
        public virtual void _021_Roles_EditTheRolesAfterRemovingTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("021 - Roles - Edit the roles after removing the data", ((string[])(null)));
#line 240
this.ScenarioSetup(scenarioInfo);
#line 241
 testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 242
 testRunner.Then("\'User Management\' header should be displayed on User Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 243
    testRunner.When("I Click on Roles Icon on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 244
 testRunner.When("I Click on Edit button of role", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 245
 testRunner.Then("I Add Role Name on edit Role Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 246
 testRunner.And("I add description on edit Role Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 247
 testRunner.And("I select permission \'Task\' on edit Role Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 248
 testRunner.Then("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("022 - Roles Enhancement in User Management")]
        [NUnit.Framework.CategoryAttribute("US237089")]
        public virtual void _022_RolesEnhancementInUserManagement()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("022 - Roles Enhancement in User Management", new string[] {
                        "US237089"});
#line 251
this.ScenarioSetup(scenarioInfo);
#line 252
       testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 253
       testRunner.When("I Click on Roles Icon on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 254
       testRunner.When("I Click on Edit button of role", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 255
       testRunner.Then("I Edit and click on Cancel Button and validate Edit Name is not changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 256
       testRunner.Then("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("023 - Roles Enhancement in User Management")]
        [NUnit.Framework.CategoryAttribute("237089")]
        public virtual void _023_RolesEnhancementInUserManagement()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("023 - Roles Enhancement in User Management", new string[] {
                        "237089"});
#line 259
this.ScenarioSetup(scenarioInfo);
#line 260
       testRunner.Given("I enter to UserManagement page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 261
       testRunner.When("I Click on Roles Icon on User Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 262
       testRunner.When("I Click on Add Roles Button on Role Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 263
       testRunner.Then("I Add Role Name on Add Role Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 264
       testRunner.And("I add description on Add Role Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 265
       testRunner.And("I select permission \'Admin\' on Add Role Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 266
       testRunner.And("Role should be created on Save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 267
       testRunner.Then("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
