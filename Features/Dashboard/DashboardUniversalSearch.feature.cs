// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Epiq.ETS.TCMS.Anywhere.Testing.E2ETest.Features.Dashboard
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Universal Search On Dashboard")]
    [NUnit.Framework.IgnoreAttribute("Ignored feature")]
    [NUnit.Framework.CategoryAttribute("Regression")]
    [NUnit.Framework.CategoryAttribute("DoNotExecute")]
    [NUnit.Framework.CategoryAttribute("ReactJS")]
    public partial class UniversalSearchOnDashboardFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "DashboardUniversalSearch.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Universal Search On Dashboard", "\tIn order to search for any resource on the application\r\n\tAs a user of Unity \r\n\tI" +
                    " want the ability on my Landing Page to perform a search across the database", ProgrammingLanguage.CSharp, new string[] {
                        "Regression",
                        "Ignore",
                        "DoNotExecute",
                        "ReactJS"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Dashboard - Universal Search With One Character")]
        [NUnit.Framework.CategoryAttribute("Sanity")]
        [NUnit.Framework.CategoryAttribute("Dashboard")]
        [NUnit.Framework.CategoryAttribute("UniversalSearch")]
        [NUnit.Framework.CategoryAttribute("US97301")]
        [NUnit.Framework.CategoryAttribute("TC101270")]
        public virtual void Dashboard_UniversalSearchWithOneCharacter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Dashboard - Universal Search With One Character", new string[] {
                        "Sanity",
                        "Dashboard",
                        "UniversalSearch",
                        "US97301",
                        "TC101270"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
testRunner.Given("I enter to Dashboard page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
testRunner.When("I Enter \'bc\' On The Universal Search Section Input", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
testRunner.Then("The Search Unfolds and Displays The Message as \'No results available\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 30
testRunner.And("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Dashboard - Universal Search - No Results")]
        [NUnit.Framework.CategoryAttribute("Dashboard")]
        [NUnit.Framework.CategoryAttribute("UniversalSearch")]
        [NUnit.Framework.CategoryAttribute("US97301")]
        [NUnit.Framework.CategoryAttribute("TC101272")]
        [NUnit.Framework.TestCaseAttribute("abc123", new string[0])]
        [NUnit.Framework.TestCaseAttribute("&&%$$", new string[0])]
        public virtual void Dashboard_UniversalSearch_NoResults(string searchText, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Dashboard",
                    "UniversalSearch",
                    "US97301",
                    "TC101272"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Dashboard - Universal Search - No Results", @__tags);
#line 35
this.ScenarioSetup(scenarioInfo);
#line 36
testRunner.Given("I enter to Dashboard page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 37
testRunner.When(string.Format("I Enter \'{0}\' On The Universal Search Section Input", searchText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
testRunner.Then("The Search Unfolds and Displays The Message as \'No results available\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 39
testRunner.And("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Dashboard - Universal Search With Two Characters And More Than Five Results")]
        [NUnit.Framework.CategoryAttribute("Sanity")]
        [NUnit.Framework.CategoryAttribute("Dashboard")]
        [NUnit.Framework.CategoryAttribute("UniversalSearch")]
        [NUnit.Framework.CategoryAttribute("US97301")]
        [NUnit.Framework.CategoryAttribute("TC101269")]
        [NUnit.Framework.CategoryAttribute("TC101271")]
        [NUnit.Framework.CategoryAttribute("TC101273")]
        [NUnit.Framework.TestCaseAttribute("MULTICONSULTANT", new string[0])]
        [NUnit.Framework.TestCaseAttribute("0:W36", new string[0])]
        [NUnit.Framework.TestCaseAttribute("6V-XXX", new string[0])]
        [NUnit.Framework.TestCaseAttribute("01-", new string[0])]
        [NUnit.Framework.TestCaseAttribute("13-17275", new string[0])]
        public virtual void Dashboard_UniversalSearchWithTwoCharactersAndMoreThanFiveResults(string searchText, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Sanity",
                    "Dashboard",
                    "UniversalSearch",
                    "US97301",
                    "TC101269",
                    "TC101271",
                    "TC101273"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Dashboard - Universal Search With Two Characters And More Than Five Results", @__tags);
#line 50
this.ScenarioSetup(scenarioInfo);
#line 51
testRunner.Given("I enter to Dashboard page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 52
testRunner.When(string.Format("I Enter \'{0}\' On The Universal Search Section Input", searchText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 53
testRunner.Then(string.Format("I See Only Cases Matching the \'{0}\' on the Result List", searchText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 54
testRunner.And("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Dashboard - Universal Search - Navigate to Case Detail")]
        [NUnit.Framework.CategoryAttribute("Dashboard")]
        [NUnit.Framework.CategoryAttribute("UniversalSearch")]
        [NUnit.Framework.CategoryAttribute("US97301")]
        [NUnit.Framework.CategoryAttribute("TC101276")]
        [NUnit.Framework.CategoryAttribute("US102350")]
        [NUnit.Framework.CategoryAttribute("TC102405")]
        public virtual void Dashboard_UniversalSearch_NavigateToCaseDetail()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Dashboard - Universal Search - Navigate to Case Detail", new string[] {
                        "Dashboard",
                        "UniversalSearch",
                        "US97301",
                        "TC101276",
                        "US102350",
                        "TC102405"});
#line 67
this.ScenarioSetup(scenarioInfo);
#line 68
testRunner.Given("I enter to 341 Meeting page as superuser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 69
testRunner.When("I Enter \'13-17275\' On The Universal Search Input", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
testRunner.And("I Click on the Case Result \'13-17275\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
testRunner.Then("I See The Case Detail Page Displays For Case Number \'13-17275\' With Case Name \'NI" +
                    "COLE FOXX REID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 72
testRunner.And("I SignOut from the Unity Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
